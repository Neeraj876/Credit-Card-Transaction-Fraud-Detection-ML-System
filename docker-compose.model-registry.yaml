services:
  mlflow-postgres:
    image: postgres:15
    container_name: mlflow-postgres
    ports:
      - "5433:5432"  
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=mlflow_db
    volumes:
      - mlflow_postgres_data:/var/lib/postgresql/data
      # - ./model_registry/postgres-mlflow/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - easymlops_network

  mlflow:
    build:
      context: .
      dockerfile: model_registry/Dockerfile.mlflow
    depends_on:
      mlflow-postgres:
        condition: service_healthy
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      MLFLOW_S3_ENDPOINT_URL: https://s3.us-east-1.amazonaws.com
    command: >
      mlflow server 
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@mlflow-postgres:5432/mlflow_db
      --artifacts-destination s3://mlflowtracking233/mlflow-artifacts
      --host 0.0.0.0
    restart: unless-stopped
    networks:
      - easymlops_network

volumes:
  mlflow_postgres_data:

# networks:
#   easymlops_network:
#     name: easymlops_network
networks:
  easymlops_network:
    external: true